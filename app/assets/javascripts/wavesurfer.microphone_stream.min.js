/*! wavesurfer.js 1.0.25
* https://github.com/katspaugh/wavesurfer.js
* @license CC-BY 3.0 */!function(a,b){"function"==typeof define&&define.amd?define(["wavesurfer"],b):a.WaveSurfer.MicrophoneStream=b(a.WaveSurfer)}(this,function(a){"use strict";return a.MicrophoneStream={init:function(a){this.params=a;this.wavesurfer=a.wavesurfer;if(!this.wavesurfer)throw new Error("No WaveSurfer instance provided");this.active=!1,this.paused=!1,this.getUserMedia=(navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia).bind(navigator),this.bufferSize=this.params.bufferSize||4096,this.numberOfInputChannels=this.params.numberOfInputChannels||1,this.numberOfOutputChannels=this.params.numberOfOutputChannels||1,this.micContext=this.wavesurfer.backend.getAudioContext(),this.windowSize=this.params.windowSize||100*this.bufferSize,this.inputBuffer=this.createBuffer(this.windowSize)},start:function(){this.getUserMedia({video:!1,audio:!0},this.gotStream.bind(this),this.deviceError.bind(this))},togglePlay:function(){this.active?(this.paused=!this.paused,this.paused?this.disconnect():this.connect()):this.start()},stop:function(){this.active&&(this.active=!1,this.stream&&this.stream.stop(),this.disconnect(),this.wavesurfer.empty())},connect:function(){void 0!==this.stream&&(this.mediaStreamSource=this.micContext.createMediaStreamSource(this.stream),this.levelChecker=this.micContext.createScriptProcessor(this.bufferSize,this.numberOfInputChannels,this.numberOfOutputChannels),this.mediaStreamSource.connect(this.levelChecker),this.levelChecker.connect(this.micContext.destination),this.levelChecker.onaudioprocess=this.reloadBuffer.bind(this))},disconnect:function(){void 0!==this.mediaStreamSource&&this.mediaStreamSource.disconnect(),void 0!==this.levelChecker&&this.levelChecker.disconnect()},createBuffer:function(a){return this.micContext.createBuffer(this.numberOfInputChannels,a,this.micContext.sampleRate)},reloadBuffer:function(a){this.paused||(this.concatBuffer(a.inputBuffer),this.wavesurfer.empty(),this.wavesurfer.loadDecodedBuffer(this.sliceBuffer()))},concatBuffer:function(a){for(var b=this.inputBuffer.length+a.length,c=this.createBuffer(b),d=0;d<this.numberOfInputChannels;++d){var e=c.getChannelData(d);e.set(this.inputBuffer.getChannelData(d),0),e.set(a.getChannelData(d),this.inputBuffer.length)}this.inputBuffer=c},sliceBuffer:function(){var a=this.createBuffer(this.windowSize),b=this.inputBuffer.length-this.windowSize;b=b>=0?b:0;for(var c=0;c<this.numberOfInputChannels;++c){var d=a.getChannelData(c),e=this.inputBuffer.getChannelData(c).subarray(b);d.set(e)}return a},gotStream:function(a){this.stream=a,this.active=!0,this.connect(),this.fireEvent("deviceReady",a)},destroy:function(){this.stop()},deviceError:function(a){this.fireEvent("deviceError",a)}},a.util.extend(a.MicrophoneStream,a.Observer),a.MicrophoneStream});
/*! chunk_recorder - v0.1.0 - 2015-04-12
* https://github.com/FeGs/chunk_recorder
* Copyright (c) 2015 Hong ChulJu; Licensed MIT */
!function(a){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=a();else if("function"==typeof define&&define.amd)define([],a);else{var b;b="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,b.ChunkRecorder=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){"use strict";function d(a,b){if(b=b||{},this.scheduler=new e(a,b),this.chunk_index=0,this.chunks=[],this.encoding_method=b.encoding_method,!this.encoding_method)throw"Encoding method is required.";this.chunk_interval=b.chunk_interval||0}var e=a("./record_scheduler");d.prototype.change_chunk_interval=function(a){this.chunk_interval=a},d.prototype.get_chunks=function(){return this.chunks},d.prototype.get_recorder=function(){return this.scheduler.get_current()},d.prototype.record=function(){var a=this.get_recorder();a&&(a.record(),this.chunk_interval>0&&this.scheduler.schedule(function(a){this._store_chunk(a)}.bind(this),this.chunk_interval))},d.prototype.stop=function(a){this.scheduler.cancel();var b=this.get_recorder();this._store_chunk(b,a)},d.prototype.pause=function(a){this.scheduler.pause();var b=this.get_recorder();b.stop()},d.prototype.clear=function(){this.scheduler.cancel(),this.chunks=[],this.chunk_index=0},d.prototype._store_chunk=function(a,b){var c=function(){var c=this.chunk_index;return function(d,e){a.stop(),this.chunks.push({index:c,blob:e}),a.clear(),b&&b(null,e)}}.bind(this)();this.chunk_index+=1,this.encoding_method.call(this,a,c.bind(this))},b.exports=d},{"./record_scheduler":3}],2:[function(a,b,c){"use strict";function d(a){this.event=a,this.elapsed_total=0,this.interval=0,this.paused=!1,this.recently_scheduled_start_time=0,this.handle=null}d.prototype.set_event=function(a){this.event=a},d.prototype.schedule=function(a){return this.paused?void this.resume():(this.interval=a,this.cancel(),this.recently_scheduled_start_time=new Date,void(this.handle=setTimeout(function(){var b=new Date;this.elapsed_total+=b-this.recently_scheduled_start_time,this.event(),null!==this.handle&&this.schedule(a)}.bind(this),a)))},d.prototype.cancel=function(){this.handle&&clearTimeout(this.handle),this.handle=null},d.prototype.pause=function(){this.cancel(),this.paused=!0,this.elapsed=new Date-this.recently_scheduled_start_time,this.elapsed_total+=this.elapsed},d.prototype.resume=function(){if(this.paused){this.paused=!1,this.recently_scheduled_start_time=new Date;var a=this.interval-this.elapsed;this.handle=setTimeout(function(){var a=new Date;this.elapsed_total+=a-this.recently_scheduled_start_time,this.event(),null!==this.handle&&this.schedule(this.interval)}.bind(this),a)}},b.exports=d},{}],3:[function(a,b,c){"use strict";function d(a,b){if(b=b||{},this.buffer_size=b.buffer_size||2,this.buffer_size<2)throw"Buffer Size should be greater than 1.";this.buffer=[],this.buffer_index=0;for(var c=0;c<this.buffer_size;++c)this.buffer.push(a());this.scheduled=new e}var e=a("./event_scheduler");d.prototype.get_current=function(){return this.buffer[this.buffer_index]},d.prototype.get_next=function(){var a=this.buffer.length;return this.buffer_index=(this.buffer_index+a+1)%a,this.get_current()},d.prototype.schedule=function(a,b){return this.scheduled.paused?void this.scheduled.resume():(this.cancel(),this.scheduled.set_event(function(){var b=this.get_current();return this.get_next(),a(b)}.bind(this)),void this.scheduled.schedule(b))},d.prototype.pause=function(){this.scheduled.pause()},d.prototype.cancel=function(){this.scheduled.cancel()},b.exports=d},{"./event_scheduler":2}]},{},[1])(1)});